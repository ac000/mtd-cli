name: Builds

on:
  push:
    branches: master
    paths:
      - Makefile
      - 'src/**'
      - '.github/workflows/build_tests.yaml'
  pull_request:
    branches: master
    paths:
      - Makefile
      - 'src/**'
      - '.github/workflows/build_tests.yaml'

jobs:
  # GitHub Currently only supports running directly on Ubuntu,
  # for any other Linux we need to use a container.

  # Rocky Linux 8 (RHEL clone) / glibc 2.28 / gcc 8.5.0
  rocky-linux-8:
    runs-on: ubuntu-latest

    container:
      image: rockylinux:8

    steps:
      - name: Install tools/deps
        run: |
          yum -y install git gcc make jansson-devel libcurl-devel
          git config --global --add safe.directory /__w/mtd-cli/mtd-cli
          git clone https://github.com/ac000/libmtdac.git ${RUNNER_TEMP}/libmtdac
          cd ${RUNNER_TEMP}/libmtdac/src
          make
          export LD_LIBRARY_PATH=`pwd`

      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"

      - name: make
        run: CFLAGS="-I${RUNNER_TEMP}/libmtdac/include -Werror" LDFLAGS=-L${RUNNER_TEMP}/libmtdac/src make V=1

  # Debian 12 / glibc 2.36 / gcc 12
  debian_12:
    runs-on: ubuntu-latest

    container:
      image: debian:12

    steps:
      - name: Install deps
        run: |
          apt-get -y update
          apt-get -y install git gcc make libjansson-dev libcurl4-openssl-dev
          git config --global --add safe.directory /__w/mtd-cli/mtd-cli
          git clone https://github.com/ac000/libmtdac.git ${RUNNER_TEMP}/libmtdac
          cd ${RUNNER_TEMP}/libmtdac/src
          make
          export LD_LIBRARY_PATH=`pwd`

      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"

      - name: make
        run: CFLAGS="-I${RUNNER_TEMP}/libmtdac/include -Werror" LDFLAGS=-L${RUNNER_TEMP}/libmtdac/src make V=1

  # Alpine Linux with musl libc and GCC & Clang
  alpine:
    runs-on: ubuntu-latest

    container:
      image: alpine:edge

    strategy:
      fail-fast: false
      matrix:
        compiler: [ 'gcc', 'clang' ]

    steps:
      - name: Install tools/deps
        run: |
          apk add build-base linux-headers ${{ matrix.compiler }} git jansson-dev curl-dev
          git config --global --add safe.directory /__w/mtd-cli/mtd-cli
          git clone https://github.com/ac000/libmtdac.git ${RUNNER_TEMP}/libmtdac
          cd ${RUNNER_TEMP}/libmtdac/src
          make
          export LD_LIBRARY_PATH=`pwd`

      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"

      - name: make CC=${{ matrix.compiler }}
        run: CFLAGS="-I${RUNNER_TEMP}/libmtdac/include -Werror" LDFLAGS=-L${RUNNER_TEMP}/libmtdac/src make CC=${{ matrix.compiler }} V=1

  # Fedora 42 / glibc 2.41 / gcc 15 / clang 20
  fedora:
    runs-on: ubuntu-latest

    container:
      image: fedora:latest

    strategy:
      fail-fast: false
      matrix:
        compiler: [ 'gcc', 'clang' ]

    steps:
      - name: Install tools/deps
        run: |
          dnf -y install git ${{ matrix.compiler }} make jansson-devel libcurl-devel
          git config --global --add safe.directory /__w/mtd-cli/mtd-cli
          git clone https://github.com/ac000/libmtdac.git ${RUNNER_TEMP}/libmtdac
          cd ${RUNNER_TEMP}/libmtdac/src
          make CC=${{ matrix.compiler }}
          export LD_LIBRARY_PATH=`pwd`

      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"

      - name: make CC=${{ matrix.compiler }}
        run: CFLAGS="-I${RUNNER_TEMP}/libmtdac/include -Werror" LDFLAGS=-L${RUNNER_TEMP}/libmtdac/src make CC=${{ matrix.compiler }} V=1
